/*  * Storage */exports.storage = function(db){	return function(req,res){		if (req.session.user_id) {			var storageCollection = db.get('storageCollection');			var unitsCollection = db.get('unitsCollection');			storageCollection.find({},{},function(err,storage){				unitsCollection.find({},{},function(err,units){					res.render('storage',{						"storage" : storage,						"units" : units,						storageArr : JSON.stringify(storage),						unitsArr : JSON.stringify(units)					});				});			});		}else{			res.render('signIn');		};	};};/*  * remStorageItem */exports.remStorageItem = function(db){	return function(req,res){		if (req.session.user_id) {			var id = req.body.remId;			var storageCollection = db.get('storageCollection');			storageCollection.remove({'_id' : id},{},function(err,storage){				if(err){					res.send('There was a problem');				} else {					res.location('storage');					res.redirect('storage');				}			});		}else{			res.render('signIn');		};	};};/*  * addStorage */exports.addStorage = function(db){	return function(req,res){		if (req.session.user_id) {			var storageCollection = db.get('storageCollection');			var unitsCollection = db.get('unitsCollection');			storageCollection.find({},{},function(err,storage){				unitsCollection.find({},{},function(err,units){					res.render('addStorage',{						"storage" : storage,						"units" : units,						storageArr : JSON.stringify(storage),						unitsArr : JSON.stringify(units)					});				});			});		}else{			res.render('signIn');		};	};};/*  * storageItemEdit */exports.storageItemEdit = function(db){	return function(req,res){		if (req.session.user_id) {			var BSON = require('mongodb').BSONPure;			var id = req.params.id;			var storageCollection = db.get('storageCollection');			var unitsCollection = db.get('unitsCollection');			storageCollection.find({'_id' : BSON.ObjectID.createFromHexString(id)},{},function(err,storage){				unitsCollection.find({},{},function(err,units){					res.render('storageItemEdit',{						"storage" : storage[0],						"units" : units,						"id" : id,						storageArr : JSON.stringify(storage),						unitsArr : JSON.stringify(units)					});				});			});		}else{			res.render('signIn');		};	};};/*  * editStorageItemForm */exports.editStorageItemForm = function(db){	return function(req,res){		if (req.session.user_id) {			var BSON = require('mongodb').BSONPure;						var title = req.body.title;			var amount = req.body.amount;			var unit = req.body.unit;			var ration = req.body.ration;			var sell_price = req.body.sell_price;			var id = req.body.id;						var storageCollection = db.get('storageCollection');			storageCollection.find({'_id' : BSON.ObjectID.createFromHexString(id)},{},function(err,storage){				if (title == '') title = storage[0].title;				if (amount == '') amount = storage[0].amount;				if (unit == '') unit = storage[0].unit;				if (ration == '') ration = storage[0].ration;				if (sell_price == '') sell_price = storage[0].sell_price;				if (id == '') id = storage[0].id;								storageCollection.update({"_id" : BSON.ObjectID.createFromHexString(id)},{					"title" : title,					"amount" : amount,					"unit":unit,					"ration" : ration,					"sell_price" : sell_price,					"deleted" : "0"				},function(e,d){					if(e){						res.send('There was a problem');					} else {						res.location('storage');						res.redirect('storage');					}				});			});		}else{			res.render('signIn');		};	};};/* * Add Storage item Form */exports.addstorageitem =  function(db){	return function(req,res){		if (req.session.user_id) {			//Get Input Submissions						var title = req.body.title;			var unit = req.body.unit;			var ration = req.body.ration;			var sell_price = req.body.sell_price;						//Set Items Collection			var storageCollection = db.get('storageCollection');						//Submit Items to the DB			storageCollection.insert({				"title" : title,				"amount" : "0",				"unit":unit,				"ration" : ration,				"sell_price" : sell_price,				"deleted" : "0"			},function(err,doc){				if(err){					res.send('There was a problem');				} else {					res.location('storage');					res.redirect('storage');				}			});		}else{			res.render('signIn');		};			};}; /* * Units List */exports.units = function(db){	return function(req,res){		if (req.session.user_id) {			var unitsCollection = db.get('unitsCollection');			unitsCollection.find({},{},function(e,docs){				res.render('units',{					"units" : docs				});			});		}else{			res.render('signIn');		};		};};/* * addUnit */exports.addUnit = function(db){	return function(req,res){		if (req.session.user_id) {			res.render('addUnit',{});		}else{			res.render('signIn');		};	};};/*  * Add Unit Form */exports.addunit =  function(db){	return function(req,res){		if (req.session.user_id) {			//Get Input Submissions			var title = req.body.title;			var sign = req.body.sign;						//Set Collection			var unitsCollection = db.get('unitsCollection');						//Submit to the DB			unitsCollection.insert({				"title" : title,				"sign" : sign,				"deleted":"0"			},function(err,doc){				if(err){					res.send('There was a problem');				} else {					res.location('units');					res.redirect('units');				}			});		}else{			res.render('signIn');		};		};}; /*  * remUnit */exports.remUnit = function(db){	return function(req,res){		if (req.session.user_id) {			var id = req.body.remId;			var unitsCollection = db.get('unitsCollection');			unitsCollection.remove({'_id' : id},{},function(err,units){				if(err){					res.send('There was a problem');				} else {					res.location('units');					res.redirect('units');				}			});		}else{			res.render('signIn');		};	};};/* * unitEdit */exports.unitEdit = function(db){	return function(req,res){		if (req.session.user_id) {			var BSON = require('mongodb').BSONPure;			var id = req.params.id;			var unitsCollection = db.get('unitsCollection');			unitsCollection.find({"_id" : BSON.ObjectID.createFromHexString(id)},{},function(err, unit){				res.render('unitEdit',{					"unit" : unit[0]				});			});		}else{			res.render('signIn');		};	};};/*  * unitEditForm */exports.unitEditForm = function(db){	return function(req,res){		if (req.session.user_id) {			var BSON = require('mongodb').BSONPure;						var title = req.body.title;			var sign = req.body.sign;			var id = req.body.id;						var unitsCollection = db.get('unitsCollection');			unitsCollection.find({'_id' : BSON.ObjectID.createFromHexString(id)},{},function(err,unit){				if (title == '') title = unit[0].title;				if (sign == '') sign = unit[0].sign;								unitsCollection.update({"_id" : BSON.ObjectID.createFromHexString(id)},{					"title" : title,					"sign" : sign,				},function(e,d){					if(e){						res.send('There was a problem');					} else {						res.location('units');						res.redirect('units');					}				});			});		}else{			res.render('signIn');		};	};};/*//Storage itemsexports.storageItems = function(db){	return function(req,res){		if (req.session.user_id) {			var storageitemscollection = db.get('storageitemscollection');			storageitemscollection.find({},{},function(e,docs){				var unitscollection = db.get('unitscollection');				unitscollection.find({},{},function(err,doc){					var unitsArr;					var i = 0;					while (doc[i]) {						unitsArr = JSON.stringify(doc);						i++;					}					res.render('storage_items',{						"storage_items" : docs,						"uts":doc,						units:unitsArr,						title:"storage_items"					});				});			});		}else{			res.render('signIn');		};	};};*/